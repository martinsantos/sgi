<!-- Header -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1 class="h2">Gestión de Proyectos</h1>
        <p class="text-muted mb-0">Proyectos ordenados por fecha más reciente</p>
    </div>
    <a href="/proyectos/nuevo" class="btn btn-success">
        <i class="bi bi-plus-circle"></i> Nuevo Proyecto
    </a>
</div>

<!-- Filtros -->
<div class="card mb-4">
    <div class="card-header">
        <h5 class="mb-0"><i class="bi bi-funnel"></i> Filtros</h5>
    </div>
    <div class="card-body">
        <form id="formBusqueda" class="row g-3" method="GET" action="/proyectos">
            <div class="col-md-2">
                <input type="text" class="form-control" name="id" placeholder="ID del proyecto" value="{{filtros.id}}" title="Buscar por ID (primeros 8 caracteres)">
            </div>
            <div class="col-md-2">
                <input type="text" class="form-control" name="descripcion" placeholder="Nombre del proyecto" value="{{filtros.descripcion}}">
            </div>
            <div class="col-md-2">
                <input type="text" class="form-control" name="cliente" placeholder="Cliente" value="{{filtros.cliente}}">
            </div>
            <div class="col-md-2">
                <select class="form-select" name="estado">
                    <option value="">Todos los estados</option>
                    <option value="1" {{#eq filtros.estado "1"}}selected{{/eq}}>Pendiente</option>
                    <option value="2" {{#eq filtros.estado "2"}}selected{{/eq}}>En Progreso</option>
                    <option value="3" {{#eq filtros.estado "3"}}selected{{/eq}}>Finalizado</option>
                    <option value="4" {{#eq filtros.estado "4"}}selected{{/eq}}>Cancelado</option>
                </select>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary w-100">
                    <i class="bi bi-search"></i> Buscar
                </button>
            </div>
            <div class="col-md-2">
                <button type="button" class="btn btn-outline-secondary w-100" onclick="location.href='/proyectos'">
                    <i class="bi bi-x-circle"></i> Limpiar
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Tabla de Proyectos -->
<div class="card">
    <div class="table-responsive">
        <table class="table table-hover table-sm mb-0" id="tablaProyectos">
            <thead class="table-light sticky-top">
                <tr>
                    <th style="width: 8%; cursor: pointer;" title="Ordenar por ID" onclick="ordenarPor('id')">
                        ID <i class="bi bi-arrow-down-up" style="font-size: 0.8rem; opacity: 0.5;"></i>
                    </th>
                    <th style="width: 14%; cursor: pointer;" title="Ordenar por Proyecto" onclick="ordenarPor('descripcion')">
                        Proyecto <i class="bi bi-arrow-down-up" style="font-size: 0.8rem; opacity: 0.5;"></i>
                    </th>
                    <th style="width: 12%; cursor: pointer;" title="Ordenar por Cliente" onclick="ordenarPor('cliente_nombre')">
                        Cliente <i class="bi bi-arrow-down-up" style="font-size: 0.8rem; opacity: 0.5;"></i>
                    </th>
                    <th style="width: 8%; cursor: pointer;" title="Ordenar por Estado" onclick="ordenarPor('estado')">
                        Estado <i class="bi bi-arrow-down-up" style="font-size: 0.8rem; opacity: 0.5;"></i>
                    </th>
                    <th style="width: 10%; cursor: pointer;" title="Ordenar por Inicio" onclick="ordenarPor('fecha_inicio')">
                        Inicio <i class="bi bi-arrow-down-up" style="font-size: 0.8rem; opacity: 0.5;"></i>
                    </th>
                    <th style="width: 10%; cursor: pointer;" title="Ordenar por Cierre" onclick="ordenarPor('fecha_cierre')">
                        Cierre <i class="bi bi-arrow-down-up" style="font-size: 0.8rem; opacity: 0.5;"></i>
                    </th>
                    <th style="width: 8%; cursor: pointer;" title="Ordenar por Certificados" onclick="ordenarPor('total_certificados')">
                        Certs <i class="bi bi-arrow-down-up" style="font-size: 0.8rem; opacity: 0.5;"></i>
                    </th>
                    <th style="width: 10%; cursor: pointer;" title="Ordenar por Monto Certificados" onclick="ordenarPor('monto_certificados')">
                        Monto Certs <i class="bi bi-arrow-down-up" style="font-size: 0.8rem; opacity: 0.5;"></i>
                    </th>
                    <th style="width: 10%; cursor: pointer;" title="Ordenar por Facturado" onclick="ordenarPor('monto_facturado')">
                        Facturado <i class="bi bi-arrow-down-up" style="font-size: 0.8rem; opacity: 0.5;"></i>
                    </th>
                    <th style="width: 10%; cursor: pointer;" title="Ordenar por Presupuesto" onclick="ordenarPor('precio_venta')">
                        Presupuesto <i class="bi bi-arrow-down-up" style="font-size: 0.8rem; opacity: 0.5;"></i>
                    </th>
                    <th style="width: 7%">Acciones</th>
                </tr>
            </thead>
            <tbody>
                {{#each proyectos}}
                <tr class="align-middle">
                    <!-- ID del Proyecto -->
                    <td>
                        <code class="bg-light p-2 rounded" style="font-size: 0.85rem; color: #0d6efd; font-weight: 700; display: inline-block; min-width: 70px; text-align: center;">
                            {{this.numero_secuencial}}
                        </code>
                    </td>

                    <!-- Proyecto -->
                    <td>
                        <div>
                            <strong class="d-block">{{this.descripcion}}</strong>
                            {{#if this.observaciones}}
                            <small class="text-muted">{{truncate this.observaciones 40}}</small>
                            {{/if}}
                        </div>
                    </td>

                    <!-- Cliente -->
                    <td>
                        <small>{{this.cliente_nombre}}</small>
                    </td>

                    <!-- Estado -->
                    <td>
                        <span style="display: inline-block; padding: 0.65rem 1rem; font-weight: 800; border-radius: 0.375rem; font-size: 0.95rem; border: 2px solid; box-shadow: 0 3px 6px rgba(0,0,0,0.2); {{#eq this.estado 1}}background-color: #FFC107; color: #000; border-color: #FF9800;{{/eq}}{{#eq this.estado 2}}background-color: #0056B3; color: #FFF; border-color: #003D82;{{/eq}}{{#eq this.estado 3}}background-color: #28A745; color: #FFF; border-color: #1E7E34;{{/eq}}{{#eq this.estado 4}}background-color: #DC3545; color: #FFF; border-color: #A02830;{{/eq}}">
                            {{this.estado_nombre}}
                        </span>
                    </td>

                    <!-- Fecha Inicio -->
                    <td>
                        <small class="fw-bold">{{formatDate this.fecha_inicio}}</small>
                    </td>

                    <!-- Fecha Cierre -->
                    <td>
                        {{#if this.fecha_cierre}}
                        <small class="fw-bold">{{formatDate this.fecha_cierre}}</small>
                        {{else}}
                        <small class="text-danger">-</small>
                        {{/if}}
                    </td>

                    <!-- Total Certificados -->
                    <td class="text-center">
                        <span class="badge bg-primary">{{this.total_certificados}}</span>
                    </td>

                    <!-- Monto Certificados -->
                    <td class="text-end">
                        <small class="fw-bold text-success">{{formatCurrency this.monto_certificados}}</small>
                    </td>

                    <!-- Monto Facturado -->
                    <td class="text-end">
                        <small class="fw-bold text-info">{{formatCurrency this.monto_facturado}}</small>
                    </td>

                    <!-- Presupuesto -->
                    <td class="text-end">
                        <small class="fw-bold text-warning">{{formatCurrency this.precio_venta}}</small>
                    </td>

                                    <!-- Acciones -->
                    <td class="text-nowrap">
                        <div class="btn-group btn-group-sm flex-wrap" role="group">
                            <a href="/proyectos/ver/{{this.id}}" class="btn btn-outline-primary" title="Ver">
                                <i class="bi bi-eye"></i>
                            </a>
                            <a href="/proyectos/editar/{{this.id}}" class="btn btn-outline-warning" title="Editar">
                                <i class="bi bi-pencil"></i>
                            </a>
                            {{#if this.total_certificados}}
                            {{#if (gt this.total_certificados 0)}}
                            <button type="button" class="btn btn-outline-info toggle-certs" title="Certificados" onclick="toggleCertificados('{{this.id}}')">
                                <i class="bi bi-award"></i>
                                <span class="badge bg-info">{{this.total_certificados}}</span>
                            </button>
                            {{else}}
                            <button type="button" class="btn btn-outline-info" title="Sin certificados" disabled>
                                <i class="bi bi-award"></i>
                            </button>
                            {{/if}}
                            {{else}}
                            <button type="button" class="btn btn-outline-info" title="Sin certificados" disabled>
                                <i class="bi bi-award"></i>
                            </button>
                            {{/if}}
                            <button type="button" class="btn btn-outline-danger" title="Eliminar" onclick="abrirModalEliminar('{{this.id}}', '{{this.descripcion}}')">
                                <i class="bi bi-trash"></i>
                            </button>
                        </div>
                    </td>
                </tr>

                <!-- Fila de Certificados Expandible (Oculta por defecto) -->
                {{#if this.total_certificados}}
                {{#if (gt this.total_certificados 0)}}
                <tr class="certificados-row" id="certs-{{this.id}}" style="display: none; background-color: #ffffff; border-top: 3px solid #0d6efd; border-bottom: 2px solid #dee2e6;">
                    <td class="certs-cell" style="padding: 1.25rem; background: linear-gradient(to right, #f8f9fa 0%, #ffffff 100%);">
                        <div class="ps-3">
                            <div class="d-flex align-items-center mb-3 pb-2 border-bottom">
                                <i class="bi bi-award-fill text-primary me-2" style="font-size: 1.4rem;"></i>
                                <strong class="text-dark" style="font-size: 1.1rem;">Certificados del Proyecto ({{this.total_certificados}})</strong>
                            </div>
                            <div class="d-flex flex-wrap gap-3">
                                <a href="/proyectos/ver/{{this.id}}" class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-award me-1"></i>
                                    Ver {{this.total_certificados}} certificado{{#if (gt this.total_certificados 1)}}s{{/if}}
                                </a>
                            </div>
                        </div>
                    </td>
                </tr>
                {{/if}}
                {{/if}}

                {{else}}
                <tr>
                    <td colspan="10" class="text-center py-5">
                        <i class="bi bi-inbox" style="font-size: 2rem; opacity: 0.5;"></i>
                        <p class="text-muted mt-3 mb-0">No se encontraron proyectos</p>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>
</div>

<!-- Paginación -->
{{#if pagination}}
<nav aria-label="Paginación" class="mt-4">
    <ul class="pagination justify-content-center">
        {{#if (gt pagination.page 1)}}
        <li class="page-item">
            <a class="page-link" href="?page=1">Primera</a>
        </li>
        <li class="page-item">
            <a class="page-link" href="?page={{subtract pagination.page 1}}">Anterior</a>
        </li>
        {{/if}}

        {{#loop pagination.page pagination.pages}}
        <li class="page-item {{#eq this ../pagination.page}}active{{/eq}}">
            <a class="page-link" href="?page={{this}}">{{this}}</a>
        </li>
        {{/loop}}

        {{#if (lt pagination.page pagination.pages)}}
        <li class="page-item">
            <a class="page-link" href="?page={{add pagination.page 1}}">Siguiente</a>
        </li>
        <li class="page-item">
            <a class="page-link" href="?page={{pagination.pages}}">Última</a>
        </li>
        {{/if}}
    </ul>
</nav>
{{/if}}

<style>
    .table-hover tbody tr:hover {
        background-color: #f8f9fa;
    }

    .sticky-top {
        top: 0;
        z-index: 10;
    }

    .table-light {
        background-color: #f8f9fa;
    }

    .badge {
        font-size: 0.75rem;
        padding: 0.35rem 0.65rem;
    }

    .btn-group-sm .btn {
        padding: 0.25rem 0.5rem;
        font-size: 0.75rem;
    }

    /* Celda de certificados - Expandir a todo el ancho */
    .certs-cell {
        width: 100% !important;
        grid-column: 1 / -1 !important;
    }

    /* Tabla responsive */
    .table-responsive {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }

    /* Desktop - Tabla con ancho completo */
    @media (min-width: 769px) {
        .table {
            min-width: 100%;
        }

        .table th, .table td {
            padding: 0.75rem;
            white-space: nowrap;
        }

        /* Permitir que las acciones sean visibles */
        .table td:last-child {
            position: sticky;
            right: 0;
            background-color: white;
            z-index: 5;
        }

        .table thead th:last-child {
            position: sticky;
            right: 0;
            background-color: #f8f9fa;
            z-index: 6;
        }
    }

    /* Móvil - Tabla comprimida */
    @media (max-width: 768px) {
        .table {
            font-size: 0.8rem;
            min-width: 100%;
        }

        .table th, .table td {
            padding: 0.4rem 0.3rem;
            white-space: normal;
        }

        /* Columnas importantes visibles */
        .table th:nth-child(1),
        .table td:nth-child(1) {
            min-width: 50px;
        }

        .table th:nth-child(2),
        .table td:nth-child(2) {
            min-width: 120px;
        }

        /* Ocultar columnas menos importantes en móvil */
        .table th:nth-child(n+6):not(:last-child),
        .table td:nth-child(n+6):not(:last-child) {
            display: none;
        }

        /* Acciones siempre visibles */
        .table th:last-child,
        .table td:last-child {
            position: sticky;
            right: 0;
            background-color: white;
            z-index: 5;
            min-width: 100px;
        }

        .table thead th:last-child {
            background-color: #f8f9fa;
            z-index: 6;
        }

        /* Botones más pequeños en móvil */
        .btn-group-sm .btn {
            padding: 0.2rem 0.4rem;
            font-size: 0.65rem;
        }

        /* Reducir espacios */
        .card {
            margin-bottom: 1rem;
        }

        .card-body {
            padding: 0.75rem;
        }
    }

    /* Extra pequeño */
    @media (max-width: 480px) {
        .table {
            font-size: 0.75rem;
        }

        .table th, .table td {
            padding: 0.3rem 0.2rem;
        }

        .btn-group-sm .btn {
            padding: 0.15rem 0.3rem;
            font-size: 0.6rem;
        }

        /* Mostrar solo ID, Proyecto y Acciones */
        .table th:nth-child(n+3):not(:last-child),
        .table td:nth-child(n+3):not(:last-child) {
            display: none;
        }
    }
</style>

<!-- Modal de Eliminación -->
<div class="modal fade" id="modalEliminarProyecto" tabindex="-1" aria-labelledby="modalEliminarLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-danger">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="modalEliminarLabel">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>Eliminar Proyecto
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning mb-3">
                    <i class="bi bi-exclamation-circle me-2"></i>
                    <strong>Advertencia:</strong> Esta acción no se puede deshacer.
                </div>
                <p class="mb-3">
                    ¿Está seguro de que desea eliminar el proyecto <strong id="nombreProyectoEliminar"></strong>?
                </p>
                <div class="mb-3">
                    <label for="inputConfirmacion" class="form-label">
                        Para confirmar, escriba <code>ELIMINAR</code> en el cuadro de búsqueda:
                    </label>
                    <input 
                        type="text" 
                        class="form-control form-control-lg" 
                        id="inputConfirmacion" 
                        placeholder="Escriba ELIMINAR"
                        autocomplete="off"
                    >
                    <small class="text-muted d-block mt-2">
                        Debe escribir exactamente "ELIMINAR" (en mayúsculas)
                    </small>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="btnConfirmarEliminar" disabled>
                    <i class="bi bi-trash me-2"></i>Eliminar Proyecto
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    let proyectoIdEliminar = null;
    let ordenActual = 'fecha_inicio';
    let direccion = 'desc';
    let certificadosExpandidos = {}; // Rastrear qué certificados están expandidos

    // Toggle de certificados
    function toggleCertificados(proyectoId) {
        const filaCerts = document.getElementById(`certs-${proyectoId}`);
        if (filaCerts) {
            const isVisible = filaCerts.style.display !== 'none';
            filaCerts.style.display = isVisible ? 'none' : 'table-row';
            certificadosExpandidos[proyectoId] = !isVisible;
            
            // Cambiar icono del botón
            const botones = document.querySelectorAll(`.toggle-certs`);
            botones.forEach(btn => {
                if (btn.onclick.toString().includes(proyectoId)) {
                    const icon = btn.querySelector('i');
                    if (icon) {
                        icon.classList.toggle('bi-award');
                        icon.classList.toggle('bi-award-fill');
                    }
                }
            });
        }
    }

    // Abrir modal de eliminación
    function abrirModalEliminar(id, nombre) {
        proyectoIdEliminar = id;
        document.getElementById('nombreProyectoEliminar').textContent = nombre;
        document.getElementById('inputConfirmacion').value = '';
        document.getElementById('btnConfirmarEliminar').disabled = true;
        
        const modal = new bootstrap.Modal(document.getElementById('modalEliminarProyecto'));
        modal.show();
    }

    // Inicializar event listeners cuando el DOM esté listo
    document.addEventListener('DOMContentLoaded', function() {
        const inputConfirmacion = document.getElementById('inputConfirmacion');
        const btnConfirmarEliminar = document.getElementById('btnConfirmarEliminar');

        // Validar confirmación en tiempo real
        if (inputConfirmacion) {
            inputConfirmacion.addEventListener('input', function() {
                if (btnConfirmarEliminar) {
                    btnConfirmarEliminar.disabled = this.value !== 'ELIMINAR';
                }
            });
        }

        // Confirmar eliminación
        if (btnConfirmarEliminar) {
            btnConfirmarEliminar.addEventListener('click', async function() {
                if (!proyectoIdEliminar) return;

                const confirmacion = document.getElementById('inputConfirmacion').value;
                if (confirmacion !== 'ELIMINAR') {
                    alert('Debe escribir "ELIMINAR" para confirmar');
                    return;
                }

                try {
                    this.disabled = true;
                    this.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Eliminando...';

                    const response = await fetch(`/proyectos/${proyectoIdEliminar}/eliminar`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ confirmacion: 'ELIMINAR' })
                    });

                    const data = await response.json();

                    if (data.success) {
                        // Mostrar mensaje de éxito
                        const alertDiv = document.createElement('div');
                        alertDiv.className = 'alert alert-success alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3';
                        alertDiv.style.zIndex = '9999';
                        alertDiv.innerHTML = `
                            <i class="bi bi-check-circle me-2"></i>
                            <strong>Éxito:</strong> ${data.message}
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        `;
                        document.body.appendChild(alertDiv);

                        // Cerrar modal y recargar
                        const modal = bootstrap.Modal.getInstance(document.getElementById('modalEliminarProyecto'));
                        modal.hide();

                        // Recargar la página después de 1.5 segundos
                        setTimeout(() => {
                            window.location.href = data.redirect || '/proyectos';
                        }, 1500);
                    } else {
                        alert('Error: ' + (data.error || 'No se pudo eliminar el proyecto'));
                        this.disabled = false;
                        this.innerHTML = '<i class="bi bi-trash me-2"></i>Eliminar Proyecto';
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error al eliminar el proyecto: ' + error.message);
                    this.disabled = false;
                    this.innerHTML = '<i class="bi bi-trash me-2"></i>Eliminar Proyecto';
                }
            });
        }
    });

    // Función para ordenar por columna
    function ordenarPor(campo) {
        const params = new URLSearchParams(window.location.search);
        const sortBy = params.get('sortBy');
        const sortOrder = params.get('sortOrder') || 'DESC';
        
        // Si ya está ordenado por este campo, invertir orden
        if (sortBy === campo) {
            params.set('sortOrder', sortOrder === 'DESC' ? 'ASC' : 'DESC');
        } else {
            params.set('sortBy', campo);
            params.set('sortOrder', 'DESC');
        }
        
        // Resetear a página 1
        params.set('page', '1');
        
        // Construir URL
        const url = `/proyectos?${params.toString()}`;
        console.log('Navegando a:', url);
        window.location.href = url;
    }

    // Inicializar cuando el DOM esté listo
    document.addEventListener('DOMContentLoaded', function() {
        // Manejar búsqueda
        const formBusqueda = document.getElementById('formBusqueda');
        if (formBusqueda) {
            formBusqueda.addEventListener('submit', function(e) {
                e.preventDefault();
                const formData = new FormData(this);
                const params = new URLSearchParams(formData);
                window.location.href = `/proyectos?${params.toString()}`;
            });
        }

        // Agregar data-estado a las celdas de estado para ordenamiento
        const tabla = document.getElementById('tablaProyectos');
        if (tabla) {
            tabla.querySelectorAll('tbody tr:not(.table-light)').forEach(fila => {
                // Validar que la celda existe antes de acceder
                if (fila.cells && fila.cells[2]) {
                    const estadoCell = fila.cells[2];
                    const estadoText = estadoCell.textContent.trim();
                    if (estadoText.includes('Pendiente')) estadoCell.dataset.estado = '1';
                    else if (estadoText.includes('En Progreso')) estadoCell.dataset.estado = '2';
                    else if (estadoText.includes('Finalizado')) estadoCell.dataset.estado = '3';
                    else if (estadoText.includes('Cancelado')) estadoCell.dataset.estado = '4';
                }
            });
        }
    });
</script>
