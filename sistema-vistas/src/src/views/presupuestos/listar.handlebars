{{!-- Presupuestos Comerciales - Lista --}}
<div class="row">
  <div class="col-md-12">
    <div class="card">
      <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
          <h4 class="card-title mb-0">
            <i class="bi bi-calculator me-2"></i>
            Presupuestos Comerciales
          </h4>
          <div class="btn-group">
            <a href="/presupuestos/nuevo" class="btn btn-primary">
              <i class="bi bi-plus-lg me-1"></i>
              Nuevo Presupuesto
            </a>
            <a href="/presupuestos/export/excel" class="btn btn-success">
              <i class="bi bi-file-earmark-excel me-1"></i>
              Exportar Excel
            </a>
          </div>
        </div>
      </div>
      <div class="card-body">
        {{!-- Debug info para verificar datos --}}
        {{#if presupuestos}}
        <div class="alert alert-info mb-3">
          <i class="bi bi-info-circle me-2"></i>
          <strong>Información de carga:</strong> Se han encontrado <span class="badge bg-primary">{{presupuestos.length}}</span> presupuestos en total.
        </div>
        {{/if}}
        
        {{#if presupuestos}}
        <div class="table-responsive">
          <table class="table table-striped table-hover table-bordered align-middle" id="presupuestosTable">
            <thead class="table-dark">
              <tr>
                <th class="text-center" style="width: 8%;">Número</th>
                <th style="width: 20%;">Cliente</th>
                <th class="text-center" style="width: 10%;">Fecha</th>
                <th class="text-center" style="width: 12%;">Tipo</th>
                <th class="text-center" style="width: 10%;">Estado</th>
                <th class="text-end" style="width: 12%;">Importe Total</th>
                <th class="text-center" style="width: 10%;">Validez</th>
                <th style="display: none;">ValidezTS</th>
                <th class="text-center" style="width: 18%;">Acciones</th>
              </tr>
            </thead>
            <tbody>
              {{#each presupuestos}}
              <tr class="
                {{#eq this.estado 'vencido'}}presupuesto-vencido{{/eq}}
                {{#eq this.estado 'aprobado'}}presupuesto-aprobado{{/eq}}
                {{#eq this.estado 'rechazado'}}presupuesto-rechazado{{/eq}}
              ">
                <td class="text-center fw-bold">
                  <span class="badge bg-primary">#{{this.numero}}</span>
                </td>
                <td>
                  {{#if this.cliente_nombre}}
                    <a href="/clientes/ver/{{this.cliente_id}}" class="text-decoration-none client-link">
                      {{this.cliente_nombre}}
                    </a>
                  {{else}}
                    <span class="empty-field">Sin cliente asignado</span>
                  {{/if}}
                </td>
                <td class="text-center text-nowrap">
                  {{#if this.fecha}}
                    {{formatDate this.fecha}}
                  {{else}}
                    <span class="empty-field">Sin fecha</span>
                  {{/if}}
                </td>
                <td class="text-center">
                  {{#if this.tipo}}
                    <span class="badge badge-contrast-secondary">
                      <i class="bi bi-file-text me-1"></i>
                      {{capitalize this.tipo}}
                    </span>
                  {{else}}
                    <span class="badge badge-contrast-secondary">
                      <i class="bi bi-question-circle me-1"></i>
                      Sin tipo
                    </span>
                  {{/if}}
                </td>
                <td class="text-center">
                  {{#eq this.estado 'borrador'}}
                    <span class="badge badge-contrast-secondary">
                      <i class="bi bi-pencil-square me-1"></i>
                      {{capitalize this.estado}}
                    </span>
                  {{else}}{{#eq this.estado 'enviado'}}
                    <span class="badge bg-primary text-white">
                      <i class="bi bi-send me-1"></i>
                      {{capitalize this.estado}}
                    </span>
                  {{else}}{{#eq this.estado 'aprobado'}}
                    <span class="badge bg-success text-white">
                      <i class="bi bi-check-circle me-1"></i>
                      {{capitalize this.estado}}
                    </span>
                  {{else}}{{#eq this.estado 'rechazado'}}
                    <span class="badge bg-danger text-white">
                      <i class="bi bi-x-circle me-1"></i>
                      {{capitalize this.estado}}
                    </span>
                  {{else}}{{#eq this.estado 'vencido'}}
                    <span class="badge" style="background-color: #fd7e14; color: white;">
                      <i class="bi bi-clock me-1"></i>
                      {{capitalize this.estado}}
                    </span>
                  {{else}}
                    <span class="badge" style="background-color: #6c757d; color: white; border: 1px solid #495057;">
                      <i class="bi bi-question-circle me-1"></i>
                      {{#if this.estado}}{{capitalize this.estado}}{{else}}Sin estado{{/if}}
                    </span>
                  {{/eq}}{{/eq}}{{/eq}}{{/eq}}{{/eq}}
                </td>
                <td class="text-end">
                  {{#if this.importe_total}}
                    <span class="fw-bold text-success">${{formatNumber this.importe_total}}</span>
                  {{else}}
                    <span class="fw-bold text-danger">$ 0,00</span>
                  {{/if}}
                </td>
                <td class="text-center text-nowrap">
                  {{#if this.validez}}
                    <div>{{formatDate this.validez}}</div>
                    {{#unless this.is_expired}}
                      <small class="text-success">
                        <i class="bi bi-check-circle-fill"></i> Vigente
                      </small>
                    {{else}}
                      <small class="text-danger fw-bold">
                        <i class="bi bi-exclamation-triangle-fill"></i> Vencido
                      </small>
                    {{/unless}}
                  {{else}}
                    <span class="text-muted fst-italic">Sin validez</span>
                  {{/if}}
                </td>
                <td style="display: none;">
                  {{#if this.validez}}
                    {{toTimestamp this.validez}}
                  {{else}}
                    0
                  {{/if}}
                </td>
                <td class="text-center actions-column">
                  <div class="btn-group btn-group-sm d-flex" role="group" aria-label="Acciones del presupuesto">
                    <!-- Botón Ver -->
                    <a href="/presupuestos/ver/{{this.id}}" 
                       class="btn btn-outline-primary" 
                       data-bs-toggle="tooltip" 
                       data-bs-placement="top" 
                       title="Ver detalles del presupuesto"
                       style="border-color: var(--sgi-primary); color: var(--sgi-primary);">
                      <i class="bi bi-eye"></i>
                    </a>
                    
                    <!-- Botón Editar -->
                    <a href="/presupuestos/editar/{{this.id}}" 
                       class="btn btn-outline-warning" 
                       data-bs-toggle="tooltip" 
                       data-bs-placement="top" 
                       title="Editar presupuesto"
                       style="border-color: #fd7e14; color: #fd7e14;">
                      <i class="bi bi-pencil"></i>
                    </a>
                    
                    <!-- Botón especial para presupuestos aprobados -->
                    {{#eq this.estado 'aprobado'}}
                    <a href="/proyectos/crear-desde-presupuesto/{{this.id}}" 
                       class="btn btn-outline-success" 
                       data-bs-toggle="tooltip" 
                       data-bs-placement="top" 
                       title="Convertir en proyecto activo"
                       style="border-color: #198754; color: #198754;">
                      <i class="bi bi-play-circle-fill"></i>
                    </a>
                    {{/eq}}
                  </div>
                </td>
              </tr>
              {{/each}}
            </tbody>
          </table>
        </div>
        {{else}}
        <div class="text-center py-4">
          <i class="bi bi-calculator" style="font-size: 3rem; margin-bottom: 1rem; color: #6c757d;"></i>
          <h5 class="text-muted">No hay presupuestos registrados</h5>
          <p class="text-muted">Comienza creando tu primer presupuesto comercial</p>
          <a href="/presupuestos/nuevo" class="btn btn-primary">
            <i class="bi bi-plus-lg me-1"></i>
            Crear Presupuesto
          </a>
        </div>
        {{/if}}
      </div>
    </div>
  </div>
</div>

{{#section 'scripts'}}
<!-- DataTables CSS -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css">
<link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.2.9/css/responsive.bootstrap5.min.css">

<!-- DataTables JS (con verificación de jQuery) -->
<script>
  // Verificar que jQuery esté cargado antes de cargar DataTables
  if (typeof jQuery === 'undefined') {
    console.error('jQuery no está cargado. DataTables requiere jQuery.');
  } else {
    console.log('jQuery versión:', jQuery.fn.jquery);
  }
</script>
<script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
<script src="https://cdn.datatables.net/responsive/2.2.9/js/dataTables.responsive.min.js"></script>
<script src="https://cdn.datatables.net/responsive/2.2.9/js/responsive.bootstrap5.min.js"></script>

<script>
// Format currency function for DataTables
function formatCurrency(value) {
    if (value === null || value === undefined || value === '') return '$0';
    const number = parseFloat(value) || 0;
    return new Intl.NumberFormat('es-AR', {
        style: 'currency',
        currency: 'ARS',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
    }).format(number);
}

// Enhanced numeric search plugin for DataTables
$.fn.dataTable.ext.search.push(
    function(settings, data, dataIndex) {
        // Only apply to presupuestosTable
        if (settings.nTable.id !== 'presupuestosTable') {
            return true;
        }
        
        // Get the search term from the global search input
        const searchTerm = $('.dataTables_filter input').val().trim();
        
        if (!searchTerm) {
            return true; // No search term, show all
        }
        
        // Check if search term is a numeric filter pattern
        const numericPatterns = {
            // Greater than: >1000
            greater: /^>\s*(\d+(?:\.\d+)?)$/,
            // Less than: <1000
            less: /^<\s*(\d+(?:\.\d+)?)$/,
            // Greater than or equal: >=1000
            greaterEqual: /^>=\s*(\d+(?:\.\d+)?)$/,
            // Less than or equal: <=1000
            lessEqual: /^<=\s*(\d+(?:\.\d+)?)$/,
            // Range: 1000-5000
            range: /^(\d+(?:\.\d+)?)\s*-\s*(\d+(?:\.\d+)?)$/,
            // Exact numeric: 1000
            exact: /^(\d+(?:\.\d+)?)$/
        };
        
        // Get the amount value (column 5 - Importe Total)
        const amountData = data[5]; // Raw HTML content
        
        // Extract numeric value from formatted currency display
        // The cell contains: <span class="fw-bold text-success">$1,234.56</span>
        let amountValue = 0;
        if (amountData) {
            // Try to extract number from formatted text
            const numericMatch = amountData.match(/[0-9,.]+/);
            if (numericMatch) {
                // Remove commas and convert to float
                amountValue = parseFloat(numericMatch[0].replace(/,/g, '')) || 0;
            }
        }
        
        // Check each pattern
        let match;
        
        if ((match = searchTerm.match(numericPatterns.greaterEqual))) {
            return amountValue >= parseFloat(match[1]);
        } else if ((match = searchTerm.match(numericPatterns.lessEqual))) {
            return amountValue <= parseFloat(match[1]);
        } else if ((match = searchTerm.match(numericPatterns.greater))) {
            return amountValue > parseFloat(match[1]);
        } else if ((match = searchTerm.match(numericPatterns.less))) {
            return amountValue < parseFloat(match[1]);
        } else if ((match = searchTerm.match(numericPatterns.range))) {
            const min = parseFloat(match[1]);
            const max = parseFloat(match[2]);
            return amountValue >= min && amountValue <= max;
        } else if ((match = searchTerm.match(numericPatterns.exact))) {
            const searchValue = parseFloat(match[1]);
            // Allow for some tolerance in exact matches
            return Math.abs(amountValue - searchValue) < 0.01;
        }
        
        // If no numeric pattern matches, let DataTables handle the default search
        return true;
    }
);

$(document).ready(function() {
    // Debug: Contar las filas antes de inicializar DataTables
    const totalRows = $('#presupuestosTable tbody tr').length;
    console.log('=== DATATABLES DEBUG ===');
    console.log('Filas encontradas en la tabla antes de DataTables:', totalRows);
    console.log('=======================');
    
    // Initialize DataTables with enhanced configuration
    var table = $('#presupuestosTable').DataTable({
        // Language localization
        language: {
            url: 'https://cdn.datatables.net/plug-ins/1.11.5/i18n/es-ES.json',
            searchPlaceholder: 'Buscar presupuestos...',
            search: '_INPUT_',
            lengthMenu: 'Mostrar _MENU_ registros por página',
            info: 'Mostrando _START_ a _END_ de _TOTAL_ presupuestos',
            infoEmpty: 'No hay presupuestos para mostrar',
            infoFiltered: '(filtrado de _MAX_ presupuestos totales)',
            paginate: {
                first: 'Primero',
                last: 'Último',
                next: 'Siguiente',
                previous: 'Anterior'
            },
            emptyTable: 'No hay presupuestos registrados en la base de datos'
        },
        
        // Table configuration
        order: [[ 0, 'desc' ]], // Order by number column (descending)
        pageLength: 50, // Cambiado de 15 a 50 para mostrar más registros
        lengthMenu: [[15, 25, 50, 100, -1], [15, 25, 50, 100, 'Todos']],
        
        // Responsive configuration
        responsive: {
            details: {
                type: 'column',
                target: 'tr'
            }
        },
        
        // Column definitions
        columnDefs: [
            {
                // Actions column (now index 8)
                targets: 8,
                orderable: false,
                searchable: false,
                className: 'text-center no-wrap'
            },
            {
                // Number column
                targets: 0,
                className: 'text-center fw-bold',
                type: 'num'
            },
            {
                // Date column (fecha)
                targets: 2,
                className: 'text-center',
                type: 'date'
            },
            {
                // Validez column - display only, sorting via hidden column
                targets: 6,
                className: 'text-center',
                orderable: true,
                orderData: [7], // Use hidden column 7 (ValidezTS) for sorting
                type: 'string'
            },
            {
                // Hidden ValidezTS column - for sorting only
                targets: 7,
                visible: false,
                searchable: false,
                type: 'num'
            },
            {
                // Type and State columns  
                targets: [3, 4],
                className: 'text-center'
            },
            {
                // Amount column - Fixed filtering and sorting  
                targets: 5,
                className: 'text-end',
                type: 'num-fmt',
                render: function(data, type, row) {
                    // Ensure we have a valid number
                    const numericValue = parseFloat(data) || 0;
                    
                    if (type === 'display' || type === 'export') {
                        // For display: return formatted currency
                        return formatCurrency(numericValue);
                    } else if (type === 'type' || type === 'sort' || type === 'filter') {
                        // For filtering and sorting: return raw numeric value
                        return numericValue;
                    }
                    // Default fallback
                    return numericValue;
                }
            },
            {
                // Responsive priority
                targets: [0, 1, 4, 8], // Always show: Number, Client, State, Actions
                responsivePriority: 1
            },
            {
                targets: [2, 5, 6], // Second priority: Date, Amount, Validez
                responsivePriority: 2
            }
        ],
        
        // DOM layout
        dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6"f>>' +
             '<"row"<"col-sm-12"tr>>' +
             '<"row"<"col-sm-12 col-md-5"i><"col-sm-12 col-md-7"p>>',
        
        // Additional options
        processing: true,
        stateSave: true, // Save table state
        stateDuration: 60 * 60 * 24, // 24 hours
        
        // Custom styling
        drawCallback: function(settings) {
            // Re-initialize tooltips after table redraw
            $('[data-bs-toggle="tooltip"]').tooltip('dispose');
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
            
            // Add animation to new rows
            $('.dataTables_wrapper table tbody tr').addClass('fade-in');
        },
        
        // Initialize callback
        initComplete: function(settings, json) {
            // Add custom search functionality
            this.api().columns().every(function() {
                var that = this;
                $('input', this.footer()).on('keyup change clear', function() {
                    if (that.search() !== this.value) {
                        that.search(this.value).draw();
                    }
                });
            });
            
            // Style the search input with enhanced placeholder and tooltip
            $('.dataTables_filter input')
                .addClass('form-control')
                .attr('placeholder', 'Buscar... (ej: "1000", ">5000", "1000-3000")')
                .attr('title', 'Búsqueda avanzada por importe: Exacto (1000), Mayor que (>1000), Menor que (<1000), Rango (1000-5000)')
                .attr('data-bs-toggle', 'tooltip')
                .attr('data-bs-placement', 'bottom');
            $('.dataTables_length select').addClass('form-select');
            
            // Initialize tooltip for search input
            new bootstrap.Tooltip($('.dataTables_filter input')[0]);
        }
    });
    
    // Initialize Bootstrap tooltips
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl);
    });
    
    // Enhanced search functionality
    $('#presupuestosTable_filter input').on('keyup', function() {
        if (this.value.length >= 2 || this.value.length === 0) {
            table.search(this.value).draw();
        }
    });
    
    // Quick filter buttons (could be added to header later)
    $('.quick-filter').on('click', function() {
        var filterValue = $(this).data('filter');
        table.column(4).search(filterValue).draw(); // Filter by state column
        $('.quick-filter').removeClass('active');
        $(this).addClass('active');
    });
    
    // Clear all filters button
    $('#clearFilters').on('click', function() {
        table.search('').columns().search('').draw();
        $('.quick-filter').removeClass('active');
    });
});

// Enhanced confirmation dialog with SweetAlert-like styling
function confirmarEliminacion(id) {
    // Create a more user-friendly confirmation dialog
    const confirmDialog = document.createElement('div');
    confirmDialog.innerHTML = `
        <div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header border-0 text-center">
                        <div class="w-100">
                            <i class="bi bi-exclamation-triangle text-warning" style="font-size: 3rem;"></i>
                            <h4 class="modal-title mt-2">¿Eliminar presupuesto?</h4>
                        </div>
                    </div>
                    <div class="modal-body text-center">
                        <p class="mb-0">Esta acción no se puede deshacer.<br>
                        ¿Está seguro de que desea eliminar este presupuesto?</p>
                    </div>
                    <div class="modal-footer border-0 justify-content-center">
                        <button type="button" class="btn btn-secondary me-2" data-bs-dismiss="modal">
                            <i class="bi bi-x-circle me-1"></i>Cancelar
                        </button>
                        <button type="button" class="btn btn-danger" id="confirmDelete">
                            <i class="bi bi-trash me-1"></i>Eliminar
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(confirmDialog);
    const modal = new bootstrap.Modal(document.getElementById('confirmDeleteModal'));
    modal.show();
    
    document.getElementById('confirmDelete').addEventListener('click', function() {
        window.location.href = '/presupuestos/eliminar/' + id;
    });
    
    // Clean up modal after hiding
    document.getElementById('confirmDeleteModal').addEventListener('hidden.bs.modal', function() {
        document.body.removeChild(confirmDialog);
    });
}

// Add fade-in animation for new content
$(document).ready(function() {
    $('.fade-in').each(function(i) {
        $(this).delay(i * 50).animate({opacity: 1}, 200);
    });
});
</script>

<style>
/* DataTables custom styling */
.dataTables_wrapper .dataTables_length select,
.dataTables_wrapper .dataTables_filter input {
    border: 1px solid #ced4da;
    border-radius: 0.375rem;
    padding: 0.375rem 0.75rem;
    font-size: 0.9rem;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

.dataTables_wrapper .dataTables_filter input:focus {
    border-color: #0d6efd;
    box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
    outline: 0;
}

.dataTables_wrapper .dataTables_paginate .paginate_button {
    padding: 0.5rem 0.75rem;
    margin-left: 0.125rem;
    border-radius: 0.375rem;
    border: 1px solid #dee2e6;
    background: #fff;
    color: #0d6efd !important;
    transition: all 0.15s ease-in-out;
}

.dataTables_wrapper .dataTables_paginate .paginate_button:hover {
    background: #0d6efd;
    border-color: #0d6efd;
    color: #fff !important;
    transform: translateY(-1px);
}

.dataTables_wrapper .dataTables_paginate .paginate_button.current {
    background: #0d6efd;
    border-color: #0d6efd;
    color: #fff !important;
}

/* Animation classes */
.fade-in {
    opacity: 0;
    animation: fadeIn 0.3s ease-in-out forwards;
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

/* Enhanced table styling for better integration */
#presupuestosTable_wrapper {
    margin-top: 1rem;
}

.dataTables_info {
    font-size: 0.875rem;
    color: #6c757d;
    margin-top: 1rem;
}

.dataTables_length label,
.dataTables_filter label {
    font-weight: 500;
    margin-bottom: 0.5rem;
    display: block;
}

/* Responsive improvements */
@media (max-width: 768px) {
    .dataTables_wrapper .dataTables_length,
    .dataTables_wrapper .dataTables_filter {
        text-align: center;
        margin-bottom: 1rem;
    }
    
    .dataTables_wrapper .dataTables_info,
    .dataTables_wrapper .dataTables_paginate {
        text-align: center;
    }
}
</style>
{{/section}}
